/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon/icomoon.eot?onwfy9");
  src: url("../fonts/icomoon/icomoon.eot?onwfy9#iefix") format("embedded-opentype"), url("../fonts/icomoon/icomoon.ttf?onwfy9") format("truetype"), url("../fonts/icomoon/icomoon.woff?onwfy9") format("woff"), url("../fonts/icomoon/icomoon.svg?onwfy9#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-locate:before {
  content: "\e900"; }

.icon-two-men:before {
  content: "\e901"; }

.icon-facebook:before {
  content: "\e902"; }

.icon-twitter:before {
  content: "\e903"; }

.icon-google:before {
  content: "\e904"; }

.icon-sailboat:before {
  content: "\e905"; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  height: 100%; }

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

* {
  max-height: 1000000px; }

body {
  font: 400 14px/1.5 "Open Sans", "Raleway", "Helvetica Neue", "Helvetica", sans-serif;
  background: #fff;
  min-width: 320px;
  color: #343434; }

img {
  max-width: 100%;
  height: auto; }

strong,
b {
  font-weight: 700; }

.btn-primary,
.btn-secondary {
  color: #343434;
  -webkit-border-radius: 5px;
          border-radius: 5px;
  padding: 22px 15px;
  font-size: 14px;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
  background-color: transparent;
  border: 1px solid rgba(38, 38, 38, 0.3);
  outline: none;
  -webkit-transition: color 0.3s ease-in-out, background 0.3s ease-in-out, border 0.3s ease-in-out;
  -o-transition: color 0.3s ease-in-out, background 0.3s ease-in-out, border 0.3s ease-in-out;
  transition: color 0.3s ease-in-out, background 0.3s ease-in-out, border 0.3s ease-in-out;
  cursor: pointer;
  min-width: 310px;
  display: inline-block;
  vertical-align: top; }
  .btn-primary:hover,
  .btn-secondary:hover {
    background: #e7434e;
    color: #fff; }

.btn-secondary {
  background: #e7434e;
  color: #fff; }
  .btn-secondary:hover {
    background: #fff;
    color: #343434; }

@media (max-width: 1023px) {
  .btn-primary,
  .btn-secondary {
    padding: 15px; } }

@media (max-width: 767px) {
  .btn-primary,
  .btn-secondary {
    width: 100%;
    min-width: auto; } }

.nav-drop ul, .soc-icons, .footer-list, .footer-list .list-col-content,
.footer-list .list-col-lg-content {
  margin: 0;
  padding: 0;
  list-style: none; }

.clearfix:after, .container:after {
  content: '';
  display: block;
  clear: both; }

.form {
  background: #f9fafe;
  max-width: 770px;
  margin: 0 auto;
  position: relative;
  -webkit-border-radius: 5px;
          border-radius: 5px; }
  .form .btn-secondary {
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    min-width: 200px;
    -webkit-border-radius: 0 5px 5px 0;
            border-radius: 0 5px 5px 0;
    width: auto; }
    .form .btn-secondary:hover {
      background: #343434;
      color: #fff; }
    .form .btn-secondary i {
      padding-right: 10px; }

input {
  color: #717171;
  -webkit-border-radius: 5px 5px 5px 5px;
          border-radius: 5px 5px 5px 5px;
  border: 1px solid transparent;
  padding: 0 230px 0 30px;
  text-transform: uppercase;
  outline: none;
  width: 100%;
  height: 60px; }

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6,
.h {
  font-family: "Raleway";
  line-height: 1.5;
  margin: 0 0 30px;
  color: #f9fafe; }
  h1:last-child,
  .h1:last-child,
  h2:last-child,
  .h2:last-child,
  h3:last-child,
  .h3:last-child,
  h4:last-child,
  .h4:last-child,
  h5:last-child,
  .h5:last-child,
  h6:last-child,
  .h6:last-child,
  .h:last-child {
    margin: 0; }

h1,
.h1 {
  font-size: 72px;
  font-weight: 700;
  color: #fff;
  margin: 0 0 25px;
  text-transform: uppercase;
  letter-spacing: 5px; }
  h1 mark,
  .h1 mark {
    background: transparent;
    color: #fff;
    font-weight: 800; }

h2,
.h2 {
  font-size: 30px;
  color: #343434;
  font-weight: 400; }

h3,
.h3 {
  font-size: 14px;
  font-weight: 400; }

h4,
.h4 {
  font-size: 22px; }

h5,
.h5 {
  font-size: 18px; }

h6,
.h6 {
  font-size: 14px; }

a {
  text-decoration: none;
  color: #fff;
  outline: none;
  font-weight: 400;
  -webkit-transition: color 0.3s ease-in-out;
  -o-transition: color 0.3s ease-in-out;
  transition: color 0.3s ease-in-out; }
  a:hover, a:focus {
    color: #e7434e; }

p {
  margin: 0 0 30px; }
  p:last-child {
    margin: 0; }

.logo {
  float: left; }
  .logo a {
    display: inline-block;
    vertical-align: top; }
    .logo a img {
      display: block; }

.main-banner-section {
  position: relative;
  background-repeat: no-repeat;
  -webkit-background-size: cover;
          background-size: cover;
  background-position: 50% 50%;
  text-align: center;
  z-index: 1;
  padding: 110px 0; }
  .main-banner-section:before {
    content: '';
    width: 1px;
    margin: 0 0 0 -5px;
    overflow: hidden;
    display: inline-block;
    vertical-align: middle;
    min-height: 850px; }
  .main-banner-section:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    background: rgba(0, 0, 0, 0.6); }

@media (max-width: 1199px) {
  .main-banner-section {
    padding: 130px 0; }
    .main-banner-section:before {
      min-height: 650px; } }

@media (max-width: 1023px) {
  .main-banner-section {
    padding: 90px 0; }
    .main-banner-section:before {
      min-height: 450px; } }

@media (max-width: 767px) {
  .main-banner-section {
    padding: 90px 0 130px; }
    .main-banner-section:before {
      content: none; } }

@media (max-width: 767px) {
  .main-banner-section {
    padding: 90px 0 90px; } }

.banner-content {
  display: inline-block;
  vertical-align: middle;
  z-index: 2;
  padding: 0 15px; }
  .banner-content h2 {
    text-transform: uppercase;
    margin: 0 0 90px;
    font-family: 'Open Sans';
    color: #f9fafe; }
  .banner-content .btn-secondary {
    padding: 0;
    width: auto; }

@media (max-width: 1023px) {
  .banner-content h1 {
    font-size: 48px; }
  .banner-content h2 {
    font-size: 24px;
    margin: 0 0 40px; }
  .banner-content input {
    height: 45px; } }

@media (max-width: 767px) {
  .banner-content {
    width: 100%; }
    .banner-content h1 {
      font-size: 32px; }
    .banner-content h2 {
      font-size: 18px;
      margin: 0 0 30px; }
    .banner-content input {
      height: 45px;
      font-size: 12px;
      padding: 0 180px 0 15px; }
    .banner-content .btn-secondary {
      min-width: 160px;
      font-size: 12px; } }

@media (max-width: 479px) {
  .banner-content {
    width: 100%; }
    .banner-content h1 {
      font-size: 24px; }
    .banner-content h2 {
      font-size: 18px;
      margin: 0 0 30px; }
    .banner-content input {
      height: 40px;
      font-size: 12px;
      padding: 0 135px 0 15px; }
    .banner-content .btn-secondary {
      min-width: 120px;
      font-size: 12px; }
      .banner-content .btn-secondary i {
        display: none; } }

.nav {
  float: right; }
  .nav-opener {
    display: none;
    position: relative;
    height: 20px;
    width: 25px; }
    .nav-opener:hover {
      color: #fff; }
    .nav-opener:after, .nav-opener:before {
      content: '';
      position: absolute;
      width: 25px;
      height: 2px;
      background: #fff;
      -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      -o-transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }
    .nav-opener:after {
      bottom: 0; }
    .nav-opener:before {
      top: 0; }
    .nav-opener span {
      position: absolute;
      right: 100%;
      padding-right: 15px;
      -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      -o-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out; }
      .nav-opener span:after {
        content: '';
        position: absolute;
        left: 100%;
        top: 49%;
        -webkit-transform: translateY(-50%);
            -ms-transform: translateY(-50%);
                transform: translateY(-50%);
        height: 2px;
        width: 25px;
        background: #fff;
        -webkit-transition: -webkit-transform 0.3s ease-in-out;
        transition: -webkit-transform 0.3s ease-in-out;
        -o-transition: transform 0.3s ease-in-out;
        transition: transform 0.3s ease-in-out;
        transition: transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }
    .nav-active .nav-opener:after, .nav-active .nav-opener:before {
      content: '';
      -webkit-transform: rotate(-45deg);
          -ms-transform: rotate(-45deg);
              transform: rotate(-45deg);
      top: 50%;
      -webkit-transition: -webkit-transform 0.3s ease-in-out;
      transition: -webkit-transform 0.3s ease-in-out;
      -o-transition: transform 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out; }
    .nav-active .nav-opener:before {
      -webkit-transform: rotate(45deg);
          -ms-transform: rotate(45deg);
              transform: rotate(45deg); }
    .nav-active .nav-opener span {
      opacity: 0;
      visibility: hidden;
      -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      -o-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out; }
      .nav-active .nav-opener span:after {
        opacity: 0;
        visibility: hidden; }
  .nav-drop {
    line-height: 0;
    font-size: 0;
    letter-spacing: 0; }
    .nav-drop ul {
      line-height: 0;
      font-size: 0;
      letter-spacing: 0;
      display: inline-block; }
      .nav-drop ul li {
        display: inline-block;
        line-height: 1;
        font-size: 16px;
        letter-spacing: normal;
        color: #fff;
        text-transform: uppercase;
        vertical-align: middle; }
        .nav-drop ul li:not(:last-child) {
          padding-right: 45px; }
        .nav-drop ul li a {
          font-weight: 700; }
  .nav .btn-primary {
    min-width: 145px;
    padding: 12px 10px;
    color: #f9fafe;
    border-color: #f9fafe; }
    .nav .btn-primary:hover {
      border-color: #e7434e; }

@media (max-width: 1023px) {
  .nav {
    padding: 10px 0; }
    .nav-opener {
      display: block; }
      .nav-active .nav-opener {
        position: fixed;
        z-index: 2;
        right: 15px; }
    .nav-drop {
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: #e7434e;
      -webkit-transform: translateX(-100%);
          -ms-transform: translateX(-100%);
              transform: translateX(-100%);
      opacity: 0;
      visibility: hidden;
      -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      -o-transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
      overflow: auto;
      text-align: center;
      padding: 100px 0; }
      .nav-drop:before {
        content: '';
        min-height: 100%;
        display: inline-block;
        width: 1px;
        vertical-align: middle;
        margin: 0 0 0 -5px;
        overflow: hidden; }
      .nav-drop ul {
        text-align: center;
        vertical-align: middle; }
        .nav-drop ul li {
          display: block;
          font-size: 28px; }
          .nav-drop ul li:not(:last-child) {
            padding: 0 0 30px; }
      .nav-drop .btn-primary {
        display: block;
        margin: 0 auto;
        font-size: 24px;
        min-width: 100%; }
      .nav-active .nav-drop {
        opacity: 1;
        visibility: visible;
        -webkit-transform: translateX(0);
            -ms-transform: translateX(0);
                transform: translateX(0); }
      .resize-active .nav-drop {
        -webkit-transition: none;
        -o-transition: none;
        transition: none; } }

.score-section {
  z-index: 2;
  margin-top: -74px;
  position: relative; }
  .score-section .score-items {
    line-height: 0;
    font-size: 0;
    letter-spacing: 0;
    padding: 30px 0;
    -webkit-box-shadow: 0px 0px 30px rgba(52, 52, 52, 0.15);
            box-shadow: 0px 0px 30px rgba(52, 52, 52, 0.15);
    background: #fff; }
    .score-section .score-items li {
      line-height: 1;
      font-size: 16px;
      letter-spacing: normal;
      display: inline-block;
      width: 25%;
      text-align: center;
      padding: 10px 15px;
      font-size: 18px;
      color: #717171;
      vertical-align: top; }
      .score-section .score-items li:not(:last-child) {
        border-right: 1px solid rgba(113, 113, 113, 0.6); }
      .score-section .score-items li b {
        display: block;
        margin: 0 0 20px;
        font-size: 30px; }

@media (max-width: 1023px) {
  .score-section {
    margin-top: -65px; }
    .score-section .score-items {
      padding: 20px 0; } }

@media (max-width: 767px) {
  .score-section {
    margin-top: -65px; }
    .score-section .score-items {
      padding: 20px 0; }
      .score-section .score-items li {
        width: 50%; }
        .score-section .score-items li:nth-child(2n) {
          border: none; } }

@media (max-width: 479px) {
  .score-section {
    margin-top: -65px; }
    .score-section .score-items {
      padding: 20px 0; }
      .score-section .score-items li {
        width: 50%;
        font-size: 16px; }
        .score-section .score-items li:nth-child(2n) {
          border: none; }
        .score-section .score-items li b {
          font-size: 24px; } }

.head-block {
  max-width: 830px;
  text-align: center;
  margin: 0 auto 80px;
  font-size: 16px;
  color: #717171; }
  .head-block h2 {
    text-transform: uppercase;
    margin: 0 0 30px; }

@media (max-width: 1023px) {
  .head-block {
    margin: 0 auto 50px; }
    .head-block h2 {
      font-size: 24px;
      margin: 0 0 15px; } }

@media (max-width: 479px) {
  .head-block {
    margin: 0 auto 50px;
    font-size: 14px; }
    .head-block h2 {
      font-size: 18px;
      margin: 0 0 15px; } }

.catalog-section {
  padding: 180px 0 80px; }

@media (max-width: 1199px) {
  .catalog-section {
    padding: 120px 0 70px; } }

@media (max-width: 1023px) {
  .catalog-section {
    padding: 90px 0 50px; } }

@media (max-width: 767px) {
  .catalog-section {
    padding: 50px 0 50px; } }

.row {
  line-height: 0;
  font-size: 0;
  letter-spacing: 0;
  padding: 0 0 70px;
  margin: 0 -15px; }
  .row > li {
    display: inline-block;
    padding: 0 15px 30px;
    line-height: 1;
    font-size: 16px;
    letter-spacing: normal;
    vertical-align: top; }

.col-lg {
  width: 66.66667%; }

.col-md {
  width: 50%; }

.col {
  width: 33.33333%; }

@media (max-width: 1023px) {
  .row {
    padding: 0 0 20px; } }

@media (max-width: 767px) {
  .row {
    margin: 0; }
    .row > li {
      padding: 0 0 30px; }
  .col,
  .col-md,
  .col-lg {
    width: 100%; } }

.catalog-item {
  display: block;
  position: relative;
  -webkit-border-radius: 5px;
          border-radius: 5px; }
  .catalog-item:hover {
    color: #f9fafe; }
  .catalog-item:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: -webkit-gradient(linear, left bottom, left top, color-stop(25%, rgba(0, 0, 0, 0.6)), color-stop(50%, rgba(255, 255, 255, 0)));
    background: -webkit-linear-gradient(bottom, rgba(0, 0, 0, 0.6) 25%, rgba(255, 255, 255, 0) 50%);
    background: -o-linear-gradient(bottom, rgba(0, 0, 0, 0.6) 25%, rgba(255, 255, 255, 0) 50%);
    background: linear-gradient(to top, rgba(0, 0, 0, 0.6) 25%, rgba(255, 255, 255, 0) 50%);
    opacity: 0.6;
    -webkit-border-radius: 5px;
            border-radius: 5px; }
  .catalog-item img {
    width: 100%;
    display: block; }
  .catalog-item .item-ind {
    position: absolute;
    top: 30px;
    left: 20px;
    font-weight: 700;
    background: #e7434e;
    padding: 10px 15px 10px 40px;
    -webkit-border-radius: 5px;
            border-radius: 5px;
    z-index: 2; }
    .catalog-item .item-ind i {
      position: absolute;
      left: 15px; }
  .catalog-item .item-text {
    position: absolute;
    bottom: 30px;
    left: 20px;
    z-index: 2; }
    .catalog-item .item-text h3 {
      font-size: 30px;
      margin: 0 0 15px;
      color: #fff; }
    .catalog-item .item-text ul {
      line-height: 0;
      font-size: 0;
      letter-spacing: 0;
      list-style: none;
      padding: 0; }
      .catalog-item .item-text ul li {
        line-height: 1;
        font-size: 16px;
        letter-spacing: normal;
        display: inline-block;
        position: relative;
        padding-left: 20px; }
        .catalog-item .item-text ul li:not(:last-child) {
          padding-right: 30px; }
        .catalog-item .item-text ul li i {
          position: absolute;
          left: 0; }

@media (max-width: 1023px) {
  .catalog-item .item-text {
    font-size: 16px; }
    .catalog-item .item-text h3 {
      font-size: 20px; } }

.section-bottom {
  text-align: center; }

.banner-section {
  padding: 180px 0 160px;
  position: relative;
  background-repeat: no-repeat;
  -webkit-background-size: cover;
          background-size: cover;
  background-position: 50% 50%;
  z-index: 1;
  text-align: center; }
  .banner-section:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    background: rgba(0, 0, 0, 0.6); }

@media (max-width: 1199px) {
  .banner-section {
    padding: 80px 0 70px; } }

@media (max-width: 1023px) {
  .banner-section {
    padding: 60px 0 60px; } }

@media (max-width: 767px) {
  .banner-section {
    padding: 40px 0 40px; } }

.content-block {
  display: inline-block;
  vertical-align: top; }
  .content-block h2 {
    font-size: 72px;
    text-transform: uppercase;
    color: #f9fafe;
    font-family: 'Raleway';
    font-weight: 700;
    margin: 0 0 20px; }
  .content-block h3 {
    font-size: 30px;
    text-transform: uppercase;
    font-family: 'Open Sans';
    margin: 0 0 80px; }

@media (max-width: 1023px) {
  .content-block h2 {
    font-size: 48px; }
  .content-block h3 {
    font-size: 24px;
    margin: 0 0 40px; } }

@media (max-width: 767px) {
  .content-block h2 {
    font-size: 32px; }
  .content-block h3 {
    font-size: 18px;
    margin: 0 0 30px; } }

@media (max-width: 479px) {
  .content-block h2 {
    font-size: 24px; }
  .content-block h3 {
    font-size: 18px;
    margin: 0 0 30px; } }

.items-section {
  padding: 100px 0 90px; }
  .items-section .catalog-item .item-ind {
    padding: 15px; }

@media (max-width: 1023px) {
  .items-section {
    padding: 60px 0 50px; }
    .items-section .catalog-item .item-ind {
      padding: 10px; } }

@media (max-width: 767px) {
  .items-section {
    padding: 40px 0 40px; } }

.soc-icons {
  line-height: 0;
  font-size: 0;
  letter-spacing: 0; }
  .soc-icons li {
    line-height: 1;
    font-size: 16px;
    letter-spacing: normal;
    font-size: 42px;
    display: inline-block; }
    .soc-icons li:not(:last-child) {
      padding: 0 20px 0 0; }
    .soc-icons li a {
      display: block;
      color: #717171;
      background: #fff;
      -webkit-border-radius: 50%;
              border-radius: 50%; }
      .soc-icons li a i {
        display: block; }

.wrapper {
  position: relative;
  overflow: hidden; }

.header {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 2;
  padding: 35px 0; }
  .header .container {
    max-width: 1530px; }

@media (max-width: 1023px) {
  .header {
    padding: 25px 0; } }

.main {
  position: relative;
  z-index: 1; }

.footer {
  padding: 60px 0 40px;
  background: #404040;
  position: relative; }
  .footer:before {
    content: '/';
    position: absolute;
    bottom: 100%;
    left: 0;
    right: 0;
    background-color: #e7434e;
    height: 6px;
    background-image: -webkit-linear-gradient(135deg, rgba(0, 0, 0, 0) 49.9%, #171554 49.9%, #171554 60%, rgba(0, 0, 0, 0) 60%), -webkit-linear-gradient(135deg, #171554 10%, rgba(0, 0, 0, 0) 10%);
    background-image: -o-linear-gradient(135deg, rgba(0, 0, 0, 0) 49.9%, #171554 49.9%, #171554 60%, rgba(0, 0, 0, 0) 60%), -o-linear-gradient(135deg, #171554 10%, rgba(0, 0, 0, 0) 10%);
    background-image: linear-gradient(-45deg, rgba(0, 0, 0, 0) 49.9%, #171554 49.9%, #171554 60%, rgba(0, 0, 0, 0) 60%), linear-gradient(-45deg, #171554 10%, rgba(0, 0, 0, 0) 10%);
    -webkit-background-size: 0.5em 0.5em;
            background-size: 0.5em 0.5em; }
  .footer-list {
    line-height: 0;
    font-size: 0;
    letter-spacing: 0;
    margin: 0 -30px; }
    .footer-list .list-col,
    .footer-list .list-col-lg {
      line-height: 1;
      font-size: 16px;
      letter-spacing: normal;
      display: inline-block;
      vertical-align: top;
      padding: 0 30px 30px; }
      .footer-list .list-col-content,
      .footer-list .list-col-lg-content {
        list-style: none; }
        .footer-list .list-col-content li,
        .footer-list .list-col-lg-content li {
          font-size: 14px; }
          .footer-list .list-col-content li:first-child,
          .footer-list .list-col-lg-content li:first-child {
            padding-bottom: 30px; }
          .footer-list .list-col-content li:not(:last-child),
          .footer-list .list-col-lg-content li:not(:last-child) {
            padding-bottom: 20px; }
      .footer-list .list-col .form,
      .footer-list .list-col-lg .form {
        font-size: 14px;
        margin-bottom: 30px; }
        .footer-list .list-col .form input,
        .footer-list .list-col-lg .form input {
          text-transform: none;
          padding: 0 170px 0 20px;
          height: 40px; }
        .footer-list .list-col .form .btn-secondary,
        .footer-list .list-col-lg .form .btn-secondary {
          min-width: 150px;
          padding: 10px;
          font-size: 14px;
          font-weight: 400; }
      .footer-list .list-col h3,
      .footer-list .list-col-lg h3 {
        text-transform: uppercase;
        font-weight: 700; }
    .footer-list .list-col-lg {
      width: 40%; }
    .footer-list .list-col {
      width: 20%; }

@media (max-width: 1023px) {
  .footer {
    padding: 40px 0; }
    .footer-list {
      margin: 0 -10px; }
      .footer-list .list-col,
      .footer-list .list-col-lg {
        padding: 0 10px 30px; }
        .footer-list .list-col .form input,
        .footer-list .list-col-lg .form input {
          padding: 0 115px 0 15px; }
        .footer-list .list-col .form .btn-secondary,
        .footer-list .list-col-lg .form .btn-secondary {
          min-width: 100px; } }

@media (max-width: 767px) {
  .footer {
    padding: 40px 0; }
    .footer-list {
      margin: 0 -15px;
      text-align: center; }
      .footer-list .list-col,
      .footer-list .list-col-lg {
        width: 100%; } }

.container {
  max-width: 1230px;
  margin: 0 auto;
  padding: 0 15px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
